@typeparam TItem
@inherits ComponentBase

<div id="datatables-reponsive_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">
    <Row>
        <Column CssClass="col-sm-12 col-md-6">
            <div class="dataTables_length" id="datatables-reponsive_length">
                <label>
                    Show
                    <select name="datatables-reponsive_length" aria-controls="datatables-reponsive"
                    @bind="PageSize" @bind:event="oninput" @onchange="OnDataChanged"
                        class="custom-select custom-select-sm form-control form-control-sm">
                        <option value="10">10</option>
                        <option value="25">25</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                    </select> entries
                </label>
            </div>
        </Column>
        <Column CssClass="col-sm-12 col-md-6">
            <div id="datatables-reponsive_filter" class="dataTables_filter">
                <label>
                    Search:
                    <input type="search" class="form-control form-control-sm"
                        @bind="search"
                        @bind:event="oninput"
                        @onkeydown="OnSeachChange"
                        aria-controls="datatables-reponsive">
                </label>
                @if(OnClickFilter.HasDelegate)
                {
                    <Button Type="@Constants.Appearance.Primary" CssClass="ml-2" @onclick="OnClickFilter">
                        <i class="align-middle" data-feather="filter">&nbsp;</i>
                    </Button>
                }
            </div>
        </Column>
    </Row>
    <Row>
        <Column CssClass="col-sm-12">
            <table id="datatables-reponsive" class="table table-striped dataTable no-footer dtr-inline table-sm"
                style="width: 100%;" role="grid" aria-describedby="datatables-reponsive_info">
                <thead>
                    @DataTableHeader
                </thead>
                <tbody>
                    @if (Data == null || Data?.Any() == false)
                    {
                        <p class="text-center">Không có dữ liệu</p>
                    }
                    else
                    {
                        int index = 0;
                        foreach (var item in data)
                        {
                            <tr role="row" class="@(index % 2 == 0 ? "odd" : "even")">
                                @DataTableItems(item)
                            </tr>
                            index++;
                        }
                    }
                </tbody>
            </table>
        </Column>
    </Row>
    @if (Data?.Any() == true)
    {
        <Row>
            <Column CssClass="col-sm-12 col-md-5">
                <div class="dataTables_info" id="datatables-reponsive_info" role="status" aria-live="polite">
                    Showing @PageSize to @pageIndex of @Count entries
                </div>
            </Column>
            <Column CssClass="col-sm-12 col-md-7">
                <div class="dataTables_paginate paging_simple_numbers" id="datatables-reponsive_paginate">
                    <ul class="pagination d-flex  justify-content-end">
                        <li class="paginate_button page-item previous @(pageIndex == 1 ? "disabled" : string.Empty) "
                            id="datatables-reponsive_previous">
                            <ActionLink class="page-link" aria-controls="datatables-reponsive" data-dt-idx="0" tabindex="0"
                                CssClass="page-link" @onclick="() => ChangePage(pageIndex - 1)">Previous</ActionLink>
                        </li>
                        @{
                            var startDot = false;
                            var endDot = false;
                        }

                        @foreach (var pageNr in Enumerable.Range(1, numberOfPages))
                        {
                            @if (pageNr == pageIndex
                           || pageNr == pageIndex - 1
                           || pageNr == pageIndex + 1
                           || pageNr == 1
                           || pageNr == numberOfPages)
                            {
                                <li class="paginate_button page-item @(pageNr == pageIndex ? "active" : string.Empty)">
                                    <ActionLink class="page-link" aria-controls="datatables-reponsive" data-dt-idx="@pageNr"
                                        tabindex="0" CssClass="page-link" @onclick="() => ChangePage(pageNr)">@pageNr</ActionLink>
                                </li>
                            }
                            else if (pageNr > 1
                            && pageNr < pageIndex
                            && pageIndex > 3
                            && !startDot)
                            {
                                startDot = true;
                                <li class="paginate_button page-item disabled">
                                    <ActionLink class="page-link" aria-controls="datatables-reponsive" data-dt-idx="@pageNr"
                                        tabindex="0">...</ActionLink>
                                </li>
                            }
                            else if (pageNr < numberOfPages
                            && pageNr > pageIndex
                            && pageIndex < numberOfPages + 3
                            && !endDot)
                            {
                                endDot = true;
                                <li class="paginate_button page-item disabled">
                                    <ActionLink class="page-link" aria-controls="datatables-reponsive" data-dt-idx="@pageNr"
                                        tabindex="0">...</ActionLink>
                                </li>
                            }
                        }
                        <li class="paginate_button page-item next @(pageIndex == numberOfPages ? "disabled" : string.Empty)"
                            id="datatables-reponsive_next">
                            <ActionLink class="page-link" aria-controls="datatables-reponsive" data-dt-idx="7" tabindex="0"
                                CssClass="page-link" @onclick="() => ChangePage(pageIndex + 1)">Next</ActionLink>
                        </li>
                    </ul>
                </div>
            </Column>
        </Row>
    }
</div>